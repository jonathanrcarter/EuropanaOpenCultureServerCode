exports.updatedlocation={};exports.updatedlocationrunning=!1;
exports.setLocation=function(a){this.updatedlocation.longitude=a.coords.longitude;this.updatedlocation.latitude=a.coords.latitude;this.updatedlocation.latitudeDelta=0.01;this.updatedlocation.longitudeDelta=0.01;this.updatedlocation.heading=a.coords.heading;this.updatedlocation.altitude=a.coords.altitude;this.updatedlocation.accuracy=a.coords.accuracy;this.updatedlocation.speed=a.coords.speed;this.updatedlocation.timestamp=a.coords.timestamp;this.updatedlocation.altitudeAccuracy=a.coords.altitudeAccuracy};
exports.setHeading=function(a){this.updatedlocation.hx=a.heading.x;this.updatedlocation.hy=a.heading.y;this.updatedlocation.hz=a.heading.z;this.updatedlocation.magneticHeading=a.heading.magneticHeading;this.updatedlocation.trueHeading=a.heading.trueHeading};exports.setHeadingFromAccelerometer=function(a){this.updatedlocation.timestamp=a.timestamp;this.updatedlocation.x=a.x;this.updatedlocation.y=a.y;this.updatedlocation.z=a.z};exports.start=function(){this.getLocation(function(){})};
exports.getLocation=function(a){var b=require("/services/versions");!0==this.updatedlocationrunning?a(this.updatedlocation):(Ti.Geolocation.preferredProvider="gps",b.isIPhone3_2_Plus()&&(Ti.Geolocation.purpose="GPS demo"),!1!=Titanium.Geolocation.locationServicesEnabled&&("android"!=Titanium.Platform.name?(b=Titanium.Geolocation.locationServicesAuthorization,Ti.API.info("Authorization: "+b),b==Titanium.Geolocation.AUTHORIZATION_DENIED?Titanium.UI.createAlertDialog({title:"Kitchen Sink",message:"Your device has geo turned off - turn it on."}).show():
b==Titanium.Geolocation.AUTHORIZATION_RESTRICTED&&Titanium.UI.createAlertDialog({title:"Kitchen Sink",message:"Your device has geo turned off - turn it on."}).show()):Ti.Geolocation.preferredProvider=Ti.Geolocation.PROVIDER_GPS,Titanium.Geolocation.accuracy=Titanium.Geolocation.ACCURACY_BEST,Titanium.Geolocation.distanceFilter=10,Titanium.Geolocation.getCurrentPosition(function(b){try{if(!b.success||b.error){this.updatedlocation.text="error: "+JSON.stringify(b.error);Ti.API.info("Code translation: "+
b.code);alert("geo error "+JSON.stringify(b.error));return}}catch(d){alert(JSON.stringify(b));alert(JSON.stringify(d));return}var e=require("/services/gps");e.setLocation(b);a(e.updatedlocation)}),Titanium.Geolocation.addEventListener("location",function(a){if(a.success&&!a.error){Ti.API.info("locationcallback");var b=require("/services/gps");b.setLocation(a);b.updatedlocationrunning=!0;Ti.App.fireEvent("gps_locationchange",b.updatedlocation)}})))};exports.RadToDeg=function(a){return a*(180/Math.PI)};
exports.DegToRad=function(a){return a*(Math.PI/180)};exports.distance=function(a,b){var c=this.DegToRad(a.latitude),d=this.DegToRad(a.longitude),e=this.DegToRad(b.latitude),g=this.DegToRad(b.longitude),f=(e-c)*Math.PI/180,d=(g-d)*Math.PI/180,c=Math.sin(f/2)*Math.sin(f/2)+Math.cos(c*Math.PI/180)*Math.cos(e*Math.PI/180)*Math.sin(d/2)*Math.sin(d/2),c=6371E6*2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c));return Math.round(c/2)};
exports.getMapBounds=function(a){var b={northWest:{},northEast:{},southWest:{},southEast:{},loc:{}};b.loc.latitude=a.latitude;b.loc.latitudeDelta=a.latitudeDelta;b.loc.longitude=a.longitude;b.loc.longitudeDelta=a.longitudeDelta;b.northWest.lat=parseFloat(a.latitude)+parseFloat(a.latitudeDelta)/2;b.northWest.lng=parseFloat(a.longitude)-parseFloat(a.longitudeDelta)/2;b.southWest.lat=parseFloat(a.latitude)-parseFloat(a.latitudeDelta)/2;b.southWest.lng=parseFloat(a.longitude)-parseFloat(a.longitudeDelta)/
2;b.northEast.lat=parseFloat(a.latitude)+parseFloat(a.latitudeDelta)/2;b.northEast.lng=parseFloat(a.longitude)+parseFloat(a.longitudeDelta)/2;b.southEast.lat=parseFloat(a.latitude)-parseFloat(a.latitudeDelta)/2;b.southEast.lng=parseFloat(a.longitude)+parseFloat(a.longitudeDelta)/2;b.north=parseFloat(a.latitude)+parseFloat(a.latitudeDelta)/2;b.east=parseFloat(a.longitude)+parseFloat(a.longitudeDelta)/2;b.south=parseFloat(a.latitude)-parseFloat(a.latitudeDelta)/2;b.west=parseFloat(a.longitude)-parseFloat(a.longitudeDelta)/
2;return b};exports.formatDistance=function(a){a=isNaN(a)||""===a||null===a?0:a;return parseFloat(a/1E4).toFixed(2)+"km"};